<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Posts on zyeinn&#39;s Blog</title>
        <link>https://zyeinn.github.io/posts/</link>
        <description>Recent content in Posts on zyeinn&#39;s Blog</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
        <lastBuildDate>Tue, 04 Jan 2022 00:00:00 +0000</lastBuildDate>
        <atom:link href="https://zyeinn.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
        
        <item>
            <title>The day I found a vulnerability in my university&#39;s Moodle</title>
            <link>https://zyeinn.github.io/posts/2022/01/the-day-i-found-a-vulnerability-in-my-universitys-moodle/</link>
            <pubDate>Tue, 04 Jan 2022 00:00:00 +0000</pubDate>
            
            <guid>https://zyeinn.github.io/posts/2022/01/the-day-i-found-a-vulnerability-in-my-universitys-moodle/</guid>
            <description>In the summer of 2021, 2 friends and I were making the &amp;ldquo;schooled&amp;rdquo; Hackthebox machine, which uses the 3.9 version of moodle.
This version allowed RCE from a malicious plugin, you only needed to be an administrator for that. Looking further, we found an article from moodle talking about the existence of a Stored XSS by the parameter &amp;ldquo;moodle net profile&amp;rdquo; in the profile in version 3.9.1.
As that parameter was not sanitized, it allowed a malicious user to inject javascript code, making a simple paylaod to steal the cookie (MoodleSession) of the visitor who accessed his profile.</description>
            <content type="html"><![CDATA[<p>In the summer of 2021, 2 friends and I were making the &ldquo;schooled&rdquo; Hackthebox machine, which uses the 3.9 version of moodle.</p>
<p>This version allowed RCE from a malicious plugin, you only needed to be an administrator for that. Looking further, we found an article from moodle talking about the existence of a Stored XSS by the parameter &ldquo;moodle net profile&rdquo; in the profile in version 3.9.1.</p>
<p>As that parameter was not sanitized, it allowed a malicious user to inject javascript code, making a simple paylaod to steal the cookie (MoodleSession) of the visitor who accessed his profile. With the stolen cookie, the malicious user can change his cookie to the victim, having full access to the account.</p>
<p>After rooting the machine, I went to see the version of Moodle from my university and I came across 3.9.1, the same one that allowed Stored XSS.</p>
<p>So I went to test if it was possible and it was.</p>
<p>I sent an email straight away to the responsible of the infrastructure and within a few weeks they had already solved the problem.</p>
<h3 id="proof-of-concept-">Proof of Concept :</h3>
<p><a href="/img/poc.mp4" title="Video"><img src="/img/poc.png" alt="POC"></a></p>
]]></content>
        </item>
        
    </channel>
</rss>
